{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\honor\\\\GitHubLocalReps\\\\weather-client\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TopButtons from './components/TopButtons';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport History from './pages/History';\nimport Home from './pages/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const baseURL = 'http://localhost:8080';\n  const [weatherRecords, setWeatherRecords] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(`${baseURL}/api/v1/weather`).then(response => {\n      setWeatherRecords(response.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n  if (error) return `Error: ${error.message}`;\n  if (!weatherRecords || weatherRecords.length === 0) return \"No weather records!\";\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          weatherRecord: weatherRecords[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"historik\",\n        element: /*#__PURE__*/_jsxDEV(History, {\n          weatherRecords: weatherRecords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7g+QL48LCVFh/ph+RKQDy3UKcGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TopButtons","BrowserRouter","Route","Routes","History","Home","jsxDEV","_jsxDEV","App","_s","baseURL","weatherRecords","setWeatherRecords","error","setError","get","then","response","data","catch","message","length","children","exact","path","element","weatherRecord","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/honor/GitHubLocalReps/weather-client/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TopButtons from './components/TopButtons';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport History from './pages/History';\nimport Home from './pages/Home';\n\nfunction App() {\n  const baseURL = 'http://localhost:8080';\n  const [weatherRecords, setWeatherRecords] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios.get(`${baseURL}/api/v1/weather`)\n      .then((response) => {\n        setWeatherRecords(response.data);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, []);\n\n  if (error) return `Error: ${error.message}`;\n  if (!weatherRecords || weatherRecords.length === 0) return \"No weather records!\";\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<Home weatherRecord={weatherRecords[0]} />} />\n        <Route path=\"historik\" element={<History weatherRecords={weatherRecords} />} />\n        <Route path=\"*\" element={<h1>Not Found</h1>} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC/D,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAG,uBAAuB;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACgB,GAAG,CAAE,GAAEL,OAAQ,iBAAgB,CAAC,CACnCM,IAAI,CAAEC,QAAQ,IAAK;MAClBL,iBAAiB,CAACK,QAAQ,CAACC,IAAI,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAACN,KAAK,IAAI;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE,OAAQ,UAASA,KAAK,CAACO,OAAQ,EAAC;EAC3C,IAAI,CAACT,cAAc,IAAIA,cAAc,CAACU,MAAM,KAAK,CAAC,EAAE,OAAO,qBAAqB;EAEhF,oBACEd,OAAA,CAACN,aAAa;IAAAqB,QAAA,eACZf,OAAA,CAACJ,MAAM;MAAAmB,QAAA,gBACLf,OAAA,CAACL,KAAK;QAACqB,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAElB,OAAA,CAACF,IAAI;UAACqB,aAAa,EAAEf,cAAc,CAAC,CAAC;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7EvB,OAAA,CAACL,KAAK;QAACsB,IAAI,EAAC,UAAU;QAACC,OAAO,eAAElB,OAAA,CAACH,OAAO;UAACO,cAAc,EAAEA;QAAe;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/EvB,OAAA,CAACL,KAAK;QAACsB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAElB,OAAA;UAAAe,QAAA,EAAI;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACrB,EAAA,CA3BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}