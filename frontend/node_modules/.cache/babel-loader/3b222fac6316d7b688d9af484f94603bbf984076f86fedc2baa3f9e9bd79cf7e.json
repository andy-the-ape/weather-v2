{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\honor\\\\GitHubLocalReps\\\\weather-client\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TopButtons from './components/TopButtons';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport History from './pages/History';\nimport Home from './pages/Home';\nimport { UilSun } from '@iconscout/react-unicons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const baseURL = 'http://localhost:8080';\n  const [weatherRecord, setWeatherRecord] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(`${baseURL}/api/v1/weather/03-03-2024`).then(response => {\n      setWeatherRecord(response.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n  if (error) return `Error: ${error.message}`;\n  if (!weatherRecord) return \"No weather record!\";\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AppContent, {\n          weatherRecord: weatherRecord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 40\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"historik\",\n          element: /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g1J1n32WMsXFqu9isB+qmIJwKyw=\");\n_c = App;\nfunction AppContent({\n  weatherRecord\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbuttons\",\n        children: /*#__PURE__*/_jsxDEV(TopButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Home, {\n        weatherRecord: weatherRecord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AppContent;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContent\");","map":{"version":3,"names":["React","useState","useEffect","axios","TopButtons","BrowserRouter","Route","Routes","History","Home","UilSun","jsxDEV","_jsxDEV","App","_s","baseURL","weatherRecord","setWeatherRecord","error","setError","get","then","response","data","catch","message","children","exact","path","element","AppContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","className","_c2","$RefreshReg$"],"sources":["C:/Users/honor/GitHubLocalReps/weather-client/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TopButtons from './components/TopButtons';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport History from './pages/History';\nimport Home from './pages/Home';\nimport { UilSun } from '@iconscout/react-unicons';\n\nfunction App() {\n  const baseURL = 'http://localhost:8080';\n  const [weatherRecord, setWeatherRecord] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios.get(`${baseURL}/api/v1/weather/03-03-2024`)\n      .then((response) => {\n        setWeatherRecord(response.data);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, []);\n\n  if (error) return `Error: ${error.message}`;\n  if (!weatherRecord) return \"No weather record!\";\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<AppContent weatherRecord={weatherRecord} />}>\n          <Route path=\"historik\" element={<History/>} />\n          <Route path=\"*\" element={<h1>Not Found</h1>} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nfunction AppContent({ weatherRecord }) {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <div className=\"topbuttons\">\n          <TopButtons />\n        </div>\n        <Home weatherRecord={weatherRecord} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}