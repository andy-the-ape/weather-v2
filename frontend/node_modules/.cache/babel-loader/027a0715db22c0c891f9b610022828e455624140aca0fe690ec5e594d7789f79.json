{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\honor\\\\GitHubLocalReps\\\\weather-client\\\\weather-app\\\\src\\\\pages\\\\History.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TopButtons from '../components/TopButtons';\nimport axios from 'axios';\nimport { Chart } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction History() {\n  _s();\n  const [weatherRecords, setWeatherRecords] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const baseURL = 'http://localhost:8080';\n    axios.get(`${baseURL}/api/v1/weather/all`).then(response => {\n      setWeatherRecords(response.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n  if (error) return `Error: ${error.message}`;\n  if (!weatherRecords || weatherRecords.length === 0) return \"No weather records!\";\n\n  // Prepare data for the chart\n  const tempData = {\n    labels: weatherRecords.map(record => record.date),\n    // Assuming date is available in each weather record\n    datasets: [{\n      label: 'Temperature (°C)',\n      data: weatherRecords.map(record => record.temperature.toFixed()),\n      // Extract temperature values\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbuttons\",\n        children: /*#__PURE__*/_jsxDEV(TopButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mid\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          type: \"line\",\n          data: tempData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(History, \"7g+QL48LCVFh/ph+RKQDy3UKcGo=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","TopButtons","axios","Chart","jsxDEV","_jsxDEV","History","_s","weatherRecords","setWeatherRecords","error","setError","baseURL","get","then","response","data","catch","message","length","tempData","labels","map","record","date","datasets","label","temperature","toFixed","fill","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/honor/GitHubLocalReps/weather-client/weather-app/src/pages/History.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TopButtons from '../components/TopButtons';\r\nimport axios from 'axios';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\nfunction History() {\r\n  const [weatherRecords, setWeatherRecords] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const baseURL = 'http://localhost:8080';\r\n    axios.get(`${baseURL}/api/v1/weather/all`)\r\n      .then((response) => {\r\n        setWeatherRecords(response.data);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n      });\r\n  }, []);\r\n\r\n  if (error) return `Error: ${error.message}`;\r\n  if (!weatherRecords || weatherRecords.length === 0) return \"No weather records!\";\r\n\r\n  // Prepare data for the chart\r\n  const tempData = {\r\n    labels: weatherRecords.map(record => record.date), // Assuming date is available in each weather record\r\n    datasets: [\r\n      {\r\n        label: 'Temperature (°C)',\r\n        data: weatherRecords.map(record => record.temperature.toFixed()), // Extract temperature values\r\n        fill: false,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"container\">\r\n        <div className=\"topbuttons\">\r\n          <TopButtons />\r\n        </div>\r\n        <div className=\"mid\">\r\n          <Chart type='line' data={tempData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,OAAO,GAAG,uBAAuB;IACvCV,KAAK,CAACW,GAAG,CAAE,GAAED,OAAQ,qBAAoB,CAAC,CACvCE,IAAI,CAAEC,QAAQ,IAAK;MAClBN,iBAAiB,CAACM,QAAQ,CAACC,IAAI,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAACP,KAAK,IAAI;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE,OAAQ,UAASA,KAAK,CAACQ,OAAQ,EAAC;EAC3C,IAAI,CAACV,cAAc,IAAIA,cAAc,CAACW,MAAM,KAAK,CAAC,EAAE,OAAO,qBAAqB;;EAEhF;EACA,MAAMC,QAAQ,GAAG;IACfC,MAAM,EAAEb,cAAc,CAACc,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC;IAAE;IACnDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzBV,IAAI,EAAER,cAAc,CAACc,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACI,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;MAAE;MAClEC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB5B,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB5B,OAAA;QAAK2B,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB5B,OAAA,CAACJ,UAAU;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACNhC,OAAA;QAAK2B,SAAS,EAAC,KAAK;QAAAC,QAAA,eAClB5B,OAAA,CAACF,KAAK;UAACmC,IAAI,EAAC,MAAM;UAACtB,IAAI,EAAEI;QAAS;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CA5CQD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA8ChB,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}